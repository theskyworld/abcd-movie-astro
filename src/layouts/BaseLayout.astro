---
import "@styles/index.scss";

interface Props {
  title?: string;
}
const { title } = Astro.props as Props;
import Nav from "@components/Nav";
import SideMenus from "@components/SideMenus";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <meta name="view-transition" content="same-origin" />
    <title>{title ? `${title} | ABCD影视` : "ABCD影视"}</title>
  </head>
  <body>
    <div>
      <div id="container" class="app-container">
        <div class="static-parts-wrapper">
          <div class="from-home-page">
            <div class="home-page-swiper-container">
              <slot name="home-page-swiper" />
            </div>
            <div class="video-shows-container">
              <slot name="video-shows" />
            </div>
          </div>
          <div class="nav"><Nav client:load /></div>
          <div class="side-menus"><SideMenus client:load /></div>
        </div>
        <div class="pages"><slot /></div>
      </div>
    </div>
  </body>
</html>

<script>
  const fromHomePageElem: HTMLDivElement =
    document.querySelector(".from-home-page")!;
  const navElem: HTMLDivElement = document.querySelector(".nav")!;
  const homePageSwiperContainerElem: HTMLDivElement = document.querySelector(
    ".home-page-swiper-container",
  )!;
  // 根据swiper的是否滚动至视口之外来决定是否为navbar添加背景颜色
  const intersectionObserver = new IntersectionObserver((entries) => {
    fromHomePageElem.onscroll = () => {
      // 如果swiper元素被滑动到了视口之外
      if (entries[0].intersectionRatio === 0) {
        // 将navbar的背景颜色进行添加
        navElem.style.backgroundColor = "#1A1C1F";
      }
      // 如果swiper元素被滑动重新进入了视口
      if (entries[0].intersectionRatio > 0) {
        // 将navbar的背景颜色去除
        navElem.style.backgroundColor = "";
      }
    };
  });
  intersectionObserver.observe(homePageSwiperContainerElem);
</script>
